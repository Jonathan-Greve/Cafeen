@model PagedList.IPagedList<Cafeen.Models.tblProduct>
@using PagedList.Mvc;
<link href="=~/Content/PagesList.css" rel="stylesheet" type="text/css"/>

@{
    ViewBag.Title = "Inventory";
}

<h2>@ViewBag.Title</h2>

<p style="font-size:18px;">
    @Html.ActionLink("Create a new product", "Create", FormMethod.Get)
</p>
@using (Html.BeginForm())

{
    <p>
        Find by name: @Html.TextBox("searchString")
        <input type="submit" value="Search" />
    </p>
}

@using (Html.BeginForm())

{
    <p>
        Items Pr. Page: @Html.TextBox("itemPrPage")
        <input type="submit" value="Go" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Category", "Index", new { sortOrder = ViewBag.CategorySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Qty", "Index", new { sortOrder = ViewBag.QtySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tblCategory.CategoryName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Qty)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tblCategory.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, itemPrPage = ViewBag.CurrentPage }))